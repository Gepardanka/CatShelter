// <auto-generated />
using System;
using CatShelter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatShelter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321182851_UserChanges")]
    partial class UserChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatShelter.Models.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdoptionType")
                        .HasColumnType("int");

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");
                });

            modelBuilder.Entity("CatShelter.Models.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ArriveDate")
                        .HasColumnType("date");

                    b.Property<int?>("CarerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarerId");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatShelter.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CatShelter.Models.Adoption", b =>
                {
                    b.HasOne("CatShelter.Models.Cat", "Cat")
                        .WithMany("Adoptions")
                        .HasForeignKey("CatId");

                    b.HasOne("CatShelter.Models.User", "User")
                        .WithMany("Adoptions")
                        .HasForeignKey("UserId");

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CatShelter.Models.Cat", b =>
                {
                    b.HasOne("CatShelter.Models.User", "Carer")
                        .WithMany("CaredForCats")
                        .HasForeignKey("CarerId");

                    b.Navigation("Carer");
                });

            modelBuilder.Entity("CatShelter.Models.Cat", b =>
                {
                    b.Navigation("Adoptions");
                });

            modelBuilder.Entity("CatShelter.Models.User", b =>
                {
                    b.Navigation("Adoptions");

                    b.Navigation("CaredForCats");
                });
#pragma warning restore 612, 618
        }
    }
}
